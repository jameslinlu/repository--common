<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath*:/prop/cache.properties" ignore-unresolvable="true"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
    </bean>

    <bean id="jedisSentinelConfig" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <constructor-arg>
            <bean class="org.springframework.core.env.MapPropertySource">
                <constructor-arg value="RedisSentinelConfiguration"/>
                <constructor-arg>
                    <map>
                        <entry key="spring.redis.sentinel.master" value="${redis.master}"></entry>
                        <entry key="spring.redis.sentinel.nodes" value="${redis.sentinel}"></entry>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  p:password="${redis.password}" p:database="${redis.database}" p:timeout="${redis.timeout}">

        <!-- jedis Sentinel-->
        <constructor-arg ref="jedisSentinelConfig"></constructor-arg>
        <constructor-arg ref="jedisPoolConfig"></constructor-arg>

    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="enableTransactionSupport" value="false"/>
    </bean>

    <bean id="cacheManager" class="com.commons.cache.manager.CommonRedisCacheManager">
        <constructor-arg value="true"/>
        <constructor-arg value="false"/>
        <constructor-arg ref="stringRedisTemplate"/>
    </bean>

    <bean class="com.commons.cache.manager.CommonCacheManager">
        <property name="defaultManager" ref="cacheManager"></property>
        <!--<property name="managers">-->
        <!--<map>-->
        <!--<entry key="test" value-ref="cacheManager"/>-->
        <!--</map>-->
        <!--</property>-->
    </bean>

    <cache:annotation-driven mode="aspectj" proxy-target-class="true" cache-manager="cacheManager"/>

    <bean class="com.commons.cache.util.CacheUtil"></bean>
    <bean class="com.commons.cache.util.LockUtil"></bean>

</beans>